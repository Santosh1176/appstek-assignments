
name: gitsign verify with rekor

on:
  push:
    branches:
      - '*'
jobs:
  Rekor:
    permissions:
      contents: read
      packages: write
      # The below permission on our PAT would be used to create the OIDC token for signing the 
      # Container image after the build process is completed
      id-token: write
    runs-on: ubuntu-latest
    steps:
# Rekor-cli is installed using Go binaries below, hence this action needs Go to be installed
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20' 
      - run: go version
# jq a json parser requried while running commands during gitsign verification
      - name: 'Setup jq'
        uses: dcarbone/install-jq-action@v1.0.1
      - run: jq --version


      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.1.1
        with:
          cosign-release: 'v2.1.1'

      - name: Install rekor
        shell: bash
        run: go install -v github.com/sigstore/rekor/cmd/rekor-cli@v1.2.2

      # - name: Get Commit SHA  
      #   run: |
      #    commit=$GITHUB_SHA
      #    echo ${GITHUB_SHA}

      # - name: Write signing key to disk
      #   run: 'echo "$KEY" > cosign.key'
      #   shell: bash
      #   env:
      #     KEY: ${{ secrets.COSIGN_PUBLIC_KEY }}
  

      - name: Verify commit
        # env:
        #   COSIGN_PASSWORD: ${{secrets.COSIGN_PASSWORD}}
        shell: bash
# The below script uses rekor-cli to fetch gitsign signed commit and verifies it has an entry in Rekor logs.
# Then uses cosign to varify the certificates used in signing the commit.       
        run: |
          uuid=$(rekor-cli search --artifact <(git rev-parse HEAD | tr -d '\n') | tail -n 1)
          sig=$(rekor-cli get --uuid=$uuid --format=json | jq -r .Body.HashedRekordObj.signature.content)
          cert=$(rekor-cli get --uuid=$uuid --format=json | jq -r .Body.HashedRekordObj.signature.publicKey.content)
          cosign verify-blob --cert <(echo $cert | base64 --decode) --signature <(echo $sig | base64 --decode) <(git rev-parse HEAD | tr -d '\n')

# This method uses Git to varify the commit
      # - name: Verify commit using gitsign
      #   uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
      #   with:
      #     ref: $GITHUB_SHA
      # - uses: chainguard-dev/actions/setup-gitsign@main
      # - shell: bash
      #   run: |
      #     git verify-commit GITHUB_SHA
